module testForHuffman;

	// Inputs
	reg clk;
	reg rst_n;
	reg start;
	reg [3:0] data_in;

	// Outputs
	wire output_data;
	wire output_valid;
	wire output_done;

	// Instantiate the Unit Under Test (UUT)
	HCC uut (
		.clk(clk), 
		.rst_n(rst_n),
		.start(start), 
		.data_in(data_in), 
		.output_data(output_data),
		.output_valid(output_valid),
		.output_start(output_start),
		.output_done(output_done)
	);

	initial begin
		// Initialize Inputs
		clk = 1;
		rst_n = 0;
		start = 0;
		data_in=4'b1111;
		// Wait 100 ns for global reset to finish
		#100;
        
		// Add stimulus here
		rst_n=1;
		#10;
		start=1;
		#10;
		start=0;
		//26 26 27 36 23 30 15 23 31 19 

		data_in<=4'b0101;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0110;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b1000;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0111;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0010;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0001;#10;
		data_in<=4'b1001;#10;
		data_in<=4'b0100;#10;
		data_in<=4'b0000;#10;
		data_in<=4'b0101;#10;
		data_in<=4'b0011;#10;
		data_in<=4'b0111;#10;

		
	end
      always #5 clk=~clk;
endmodule

